<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>入手一台新的VPS后该如何进行初步的配置</title>
      <link href="/2025/06/01/VPS/"/>
      <url>/2025/06/01/VPS/</url>
      
        <content type="html"><![CDATA[<h1 id="入手一台新的VPS后该如何进行初步的配置"><a href="#入手一台新的VPS后该如何进行初步的配置" class="headerlink" title="入手一台新的VPS后该如何进行初步的配置"></a>入手一台新的VPS后该如何进行初步的配置</h1><h2 id="基础更新"><a href="#基础更新" class="headerlink" title="基础更新"></a>基础更新</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新软件包列表</span></span><br><span class="line">apt update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 升级所有已安装的软件包</span></span><br><span class="line">apt upgrade -y</span><br></pre></td></tr></table></figure><h2 id="安全加固"><a href="#安全加固" class="headerlink" title="安全加固"></a>安全加固</h2><h3 id="创建一个新的普通用户"><a href="#创建一个新的普通用户" class="headerlink" title="创建一个新的普通用户"></a>创建一个新的普通用户</h3><p>   直接使用 <code>root</code> 用户进行日常操作，是非常危险的。所以最好创建一个新用户，并赋予它管理员权限。<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 填入想要的用户名</span></span><br><span class="line">adduser username </span><br></pre></td></tr></table></figure><br>   系统会提示设置新用户的密码,并填写一些可选信息(可按回车跳过)</p><h3 id="赋予新用户sudo权限"><a href="#赋予新用户sudo权限" class="headerlink" title="赋予新用户sudo权限"></a>赋予新用户sudo权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将用户添加到sudo用户组</span></span><br><span class="line">usermod -aG <span class="built_in">sudo</span> username </span><br></pre></td></tr></table></figure><h3 id="配置ssh-禁止root登录"><a href="#配置ssh-禁止root登录" class="headerlink" title="配置ssh,禁止root登录"></a>配置ssh,禁止root登录</h3><p>   防止暴力破解<br>   首先,在本地电脑上生成ssh密钥对.创建出一个私钥<code>id_rsa</code>和一个公钥(<code>id_rsa.pub</code>)<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在本地电脑上执行</span></span><br><span class="line">ssh-keygen -t rsa -b 4096 </span><br><span class="line">```   </span><br><span class="line">   一路回车即可。</span><br><span class="line">   然后,将公钥拷贝到服务器上新创建的用户下:</span><br><span class="line">```bash</span><br><span class="line"><span class="comment"># 在本地电脑上执行(此时服务器里/etc/ssh/sshd_config中应为PasswordAuthentication yes)</span></span><br><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub username@服务器IP地址</span><br></pre></td></tr></table></figure><br>   执行后，系统会提示你输入 <code>username</code> 用户的密码。输入正确后，公钥就会被自动添加，整个过程就完成了。<br>   用新用户SSH登录服务器进行测试,确保无密码登录成功<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#如果成功，说明密钥配置正确</span></span><br><span class="line">ssh username@服务器IP地址 </span><br></pre></td></tr></table></figure><br>   <strong>确认密钥登录成功后</strong>，再修改 SSH 的配置文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/ssh/sshd_config </span><br></pre></td></tr></table></figure><p>   在打开的文件中，找到并修改以下几项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 修改默认端口，如5331，增加破解难度</span></span><br><span class="line">Port 5331</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 禁止 root 用户通过 SSH 登录</span></span><br><span class="line">PermitRootLogin no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 开启公钥认证</span></span><br><span class="line">PubkeyAuthentication <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. （确认密钥登录成功后）禁用密码认证</span></span><br><span class="line">PasswordAuthentication no</span><br></pre></td></tr></table></figure><h3 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 UFW (Debian 可能需要)</span></span><br><span class="line"><span class="built_in">sudo</span> apt install ufw -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许所有出站流量 (默认)</span></span><br><span class="line"><span class="built_in">sudo</span> ufw default deny incoming</span><br><span class="line"><span class="built_in">sudo</span> ufw default allow outgoing</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许新的 SSH 端口</span></span><br><span class="line"><span class="built_in">sudo</span> ufw allow 5331/tcp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果准备搭建网站，提前允许 HTTP 和 HTTPS 流量</span></span><br><span class="line"><span class="built_in">sudo</span> ufw allow 80/tcp   <span class="comment"># HTTP</span></span><br><span class="line"><span class="built_in">sudo</span> ufw allow 443/tcp  <span class="comment"># HTTPS</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用防火墙</span></span><br><span class="line"><span class="built_in">sudo</span> ufw <span class="built_in">enable</span></span><br></pre></td></tr></table></figure><p> 重启SSH服务<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl restart ssh</span><br></pre></td></tr></table></figure><br> 使用新的端口和用户名重新连接<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 5331 yourusername@服务器IP地址</span><br></pre></td></tr></table></figure></p><h2 id="系统配置和工具"><a href="#系统配置和工具" class="headerlink" title="系统配置和工具"></a>系统配置和工具</h2><h3 id="设置时区"><a href="#设置时区" class="headerlink" title="设置时区"></a>设置时区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前时区</span></span><br><span class="line">timedatectl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有可用时区</span></span><br><span class="line">timedatectl list-timezones</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置为亚洲/上海时区</span></span><br><span class="line"><span class="built_in">sudo</span> timedatectl set-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure><h3 id="安装常用工具包"><a href="#安装常用工具包" class="headerlink" title="安装常用工具包"></a>安装常用工具包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install -y curl wget git zip unzip htop neofetch build-essential</span><br></pre></td></tr></table></figure><ul><li><code>curl</code>, <code>wget</code>: 网络请求工具</li><li><code>git</code>: 版本控制</li><li><code>zip</code>, <code>unzip</code>: 文件压缩&#x2F;解压</li><li><code>htop</code>: 增强版的任务管理器</li><li><code>neofetch</code>: 显示漂亮的系统信息</li><li><code>build-essential</code>: 编译软件所需的工具包</li></ul><h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="BBR"><a href="#BBR" class="headerlink" title="BBR"></a>BBR</h3><p>Google BBR 是一种 TCP 拥塞控制算法，可以显著提升服务器的网络吞吐量和降低延迟，对于国际线路的 VPS 效果尤其明显。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p> 在文件末尾添加以下两行<br> <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net.core.default_qdisc=fq</span><br><span class="line">net.ipv4.tcp_congestion_control=bbr</span><br></pre></td></tr></table></figure><br>应用配置使其生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> sysctl -p</span><br></pre></td></tr></table></figure><p>验证 BBR 是否开启成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.tcp_congestion_control <span class="comment"># 如果输出中包含 &quot;bbr&quot;，则表示成功sysctl </span></span><br></pre></td></tr></table></figure><h3 id="Swap交换分区"><a href="#Swap交换分区" class="headerlink" title="Swap交换分区"></a>Swap交换分区</h3><p>如果你的 VPS 内存较小（例如 1GB 或更少），设置 Swap 可以防止因内存耗尽而导致程序崩溃。Swap 是硬盘上的一块空间，用作虚拟内存。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个 2GB 大小的 Swap 文件</span></span><br><span class="line"><span class="built_in">sudo</span> fallocate -l 2G /swapfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置正确的文件权限</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> 600 /swapfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将文件格式化为 Swap</span></span><br><span class="line"><span class="built_in">sudo</span> mkswap /swapfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用 Swap</span></span><br><span class="line"><span class="built_in">sudo</span> swapon /swapfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机自动挂载</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;/swapfile none swap sw 0 0&#x27;</span> | <span class="built_in">sudo</span> <span class="built_in">tee</span> -a /etc/fstab</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><input disabled="" type="checkbox">  <strong>更新系统</strong>：<code>apt update &amp;&amp; apt upgrade -y</code></li><li><input disabled="" type="checkbox">  <strong>创建新用户</strong>：<code>adduser yourusername</code></li><li><input disabled="" type="checkbox">  <strong>给 Sudo 权限</strong>：<code>usermod -aG sudo yourusername</code></li><li><input disabled="" type="checkbox">  <strong>配置 SSH 密钥</strong>：本地 <code>ssh-keygen</code>，然后 <code>ssh-copy-id user@IP</code></li><li><input disabled="" type="checkbox">  <strong>测试新用户登录</strong>：<code>ssh user@IP</code></li><li><input disabled="" type="checkbox">  <strong>配置防火墙</strong>：<code>sudo ufw allow &lt;ssh_port&gt;/tcp</code>，<code>sudo ufw enable</code></li><li><input disabled="" type="checkbox">  <strong>修改 SSH 配置</strong>：<code>sudo nano /etc/ssh/sshd_config</code> (改端口、禁止 root 登录、禁用密码登录)</li><li><input disabled="" type="checkbox">  <strong>重启 SSH</strong>：<code>sudo systemctl restart ssh</code></li><li><input disabled="" type="checkbox">  <strong>用新方式重连</strong>：<code>ssh -p &lt;new_port&gt; user@IP</code></li><li><input disabled="" type="checkbox">  <strong>设置时区</strong>：<code>sudo timedatectl set-timezone Asia/Shanghai</code></li><li><input disabled="" type="checkbox">  <strong>装常用工具</strong>：<code>sudo apt install -y ...</code></li><li><input disabled="" type="checkbox">  <strong>(可选) 开启 BBR</strong></li><li><input disabled="" type="checkbox">  <strong>(可选) 添加 Swap</strong></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>代码演示</title>
      <link href="/2025/05/20/My-New-Test-Post/"/>
      <url>/2025/05/20/My-New-Test-Post/</url>
      
        <content type="html"><![CDATA[<p>这是我的第一篇 Hexo 测试文章的正文。<br>如果能看到这行字，说明渲染成功了。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
